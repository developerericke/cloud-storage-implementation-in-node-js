<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyFiles - Mawingu CLoud Storage</title>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="/stylesheets/bootstrap.min.css">


    <link href="/stylesheets/index.css" rel="stylesheet" type="text/css">

</head>
<body>
<div  class=" container-fluid p-0 m-0 ">
    <div id="content-wrapper" class="p-0 m-0">
        <%- include('./partials/nav');%>
        <div id="content-section" class=" content-wrapper-itm ">
            <div id="section-actionbar">

                <img class="section-actionbar-itm" src="/images/logo.png" alt="logo">
                <div style="cursor: pointer;" data-target="#newFolderModal" data-toggle="modal" class="section-actionbar-itm"><i class="fas fa-folder-plus"></i> New Folder</div>
                <div style="cursor: pointer;"  data-target="#fileUploadModal" data-toggle="modal" class="section-actionbar-itm"><i class="fas fa-cloud-upload-alt"></i> Upload File</div>
                <div id="sortBySize" data-sortType="Asc" class="section-actionbar-itm"><i class="fa fa-sort"></i> Sort by Size</div>
<!--                <div class="section-actionbar-itm"><i class="fas fa-filter"></i> Filter</div>-->

                <div class="section-actionbar-itm">
                    <input type="search" class="form-control p-0 m-0 text-center" id="FilesSearch" style="font-size: small;" placeholder="Search Files and Folders"></div>


            </div>
            <div id="directory-tree">
                <div class="title_sub_sec"><i class="fas text-black-50 fa-folder"></i> My Folders</div>
                <ul>
                    <!-- This is the root Folder,Cannot be changed  -->

                    <li data-folderName="home"  class="directorymain mt-2"><i class="fas fa-folder"></i> <span class="direcName"> Home <span class="deleteFolder"></span> </span>
                        <% (home_folder_items).forEach((item)=>{ %>
                        <div class="dir-Contents">
                            <div date-Filextension="<%=item.extension%>" data-fileName="<%=item.name%>" data-fileType="<%=item.type%>" data-fileSize="<%=item.size%>" data-DownloadsCount="<%=item.downloads%>" data-FilePath="?owner=<%=item.fileowner%>&folder=home&file=<%=item.name%>" ></div>
                        </div>
                        <%})%>
                    </li>

                    <% user_folders.forEach((items)=>{%>

                    <li data-folderName="<%=items.folderName%>"  class="directorymain"><i class="fas fa-folder"></i> <span class="direcName" > <%=items.folderName%> <span class="pl-2 deleteFolder d-none" style="font-size: small"><i class="fa fa-trash text-danger"></i></span> </span>
                        <!-- Contents/Files Folder -->
                       <div style="font-size: x-small" class="d-none alert alert-success pl-2 pr-0 pt-0 pb-0 deleteProgress">
                                        Deleting Please wait..
                       </div>

                        <%(items.files).forEach((file)=>{%>
                        <div class="dir-Contents">
                           <div  data-fileName="<%=file.name%>" data-fileType="<%=file.type%>" data-fileSize="<%=file.size%>" data-DownloadsCount="<%=file.downloads%>" data-FilePath="?owner=<%=file.fileowner%>&folder=<%=items.folderName%>&file=<%=file.name%>" date-Filextension="<%=file.extension%>"></div>

                        </div>
                        <%})%>


                    </li>
                    <%})%>


                </ul>
            </div>
            <div id="directoryOutput">

                <div class="d-none" id="currentDir" data-pathDir="home"></div>
                <div style="cursor: pointer" class="title_sub_sec border border-info"><i class="fas fa-home text-black-50"></i><span id="currentView" class="pl-1">Home</span><span style="margin-left:75%;display: none" data-toggle="modal" id="folderDeteler" data-target="#deleteFolderModal" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i> Delete folder</span></div>
                <div id="output-section">
                    <div id="output-section-text" class="d-none p-1"><h5 class='p-2 m-1 text-center'></h5></div>
                    <table class=" table   table-hover text-center">

                    </table>
                </div>
            </div>


        </div>


    </div>

    <div id="fileUploadModal" class="modal fade" >
        <div class=" modal-dialog ">
            <div class=" modal-content">
                <div class=" modal-header">
                    <h4 class="modal-title text-info text-center font-weight-bold">File Upload Form</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class=" modal-body">
                    <form id="uploadForm">
                        <div id="createLocation" class="alert alert-info p-1 ">You are uploading to <span style="font-weight: bold">Home</span> Folder</div>
                        <div class=" form-group">
                            <label for="fileTitle" id="FieldTitleLabel" class="font-weight-bold p-0 m-0">File Title <span class="text-danger"><sup>*</sup></span></label>
                            <input name="fileTitle" required id="fileTitle" type="text"  class="form-control " style="margin-bottom:10px" placeholder="File Title...">
                            <label for="fileCategory" class="font-weight-bold d-none m-0 p-0">File Category <span class="text-danger"><sup>*</sup></span></label>
                            <select required id="fileCategory" style="margin-bottom:10px"  class="form-control d-none">
                                <option value="default">--select category--</option>
                                <option value="Document">Document</option>
                                <option value="Image">Image</option>
                                <option value="Video">Video</option>
                                <option value="archive">Archive</option>
                            </select>


                            <div class="custom-file">
                                <input required name="fileUpload"  type="file" class="custom-file-input" id="customFile">
                                <label class="custom-file-label" for="customFile">Choose file</label>
                            </div>
                            <input type="text" class="d-none" name="toFolder" id="toFolder" value="">
                            <input type="text" class="d-none" name="csrf" value="<%=csrf%>">
                            <div style="font-size: small;" id="fileState" class="d-none mt-2 text-danger"></div>

                        </div>
                        <div id="trackProgress">

                        </div>
                        <button  data-formState="okay" type="submit" class=" text-center text-white font-weight-bold btn bg-info">Submit</button>
                    </form>
                </div>

            </div>

        </div>

    </div>

<!--    Delete Folder Modal-->
    <div id="deleteFolderModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header p-0">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body font-weight-bold text-warning">
                    <p>Warning !<br>Deleting a folder will automatically delete all the files within that folder. This action is Irreversible,
                        are you sure you want to proceed ?<br> Type into the input below the word  <comment><span class="bg-info text-dark p-2" id="deleteprompt"></span></comment> </p>
                    <input class="form-control" type="text" id="verifyDeleteFolder">
                    <button style="width: 90%;min-width: 90%;margin-left: 5%;margin-top: 40px" class="btn font-weight-bolder btn-sm bg-white text-danger d-none border border-dark" id="deleteFolder">I understand that I will loose the Folder and all its content will be lost.<br>Click here to Proceed.</button>

                </div>
<!--                <div class="modal-footer">-->
<!--                    -->
<!--                </div>-->
            </div>

        </div>
    </div>

    <div id="deleteFileModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header p-0">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body font-weight-bold text-danger">
                    <p>Warning !<br>Deleting a  File permanently is Irreversible,
                        are you sure you want to proceed ?<br> You are about to delete the file named <comment><span class="bg-white p-1"  id="deleteFileName"></span></comment></p>

                    <button style="width: 90%;min-width: 90%;margin-left: 5%;margin-top: 20px" class="btn font-weight-bold btn-sm bg-warning border border-dark" id="deleteFile">Click here to delete Temporarily</button>
                    <button style="width: 90%;min-width: 90%;margin-left: 5%;margin-top: 20px" class="btn font-weight-bold btn-sm bg-danger  border border-dark" id="deleteFileP">Click here to delete Permananetly</button>

                </div>
                <!--                <div class="modal-footer">-->
                <!--                    -->
                <!--                </div>-->
            </div>

        </div>
    </div>
    <div id="newFolderModal" class="modal fade">
        <div class=" modal-dialog">
            <div class=" modal-content">
                <div class=" modal-header">
                    <h4 class="modal-title text-info text-center font-weight-bold">Create Folder</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class=" modal-body">

                    <form id="folderCreate">
                        <div class="form-group" >
                            <div id="folderFormState" class="alert d-none"></div>
                            <label for="folderName">Folder Name <span class="text-danger"><supp>*</supp></span>   </small> <span id="folderLocation" style="font-weight: bold;"></span></label>
                                <input name="folderName" maxlength="20" minlength="1" required id="folderName" class="form-control" placeholder="Folder Name" type="text"><br>
                                <button type="submit" class="btn btn-sm btn-info">Create</button>
                        </div>

                    </form>
                </div>



            </div>
        </div>
    </div>
    <div id="csrfToken" data-csrf="<%=csrf%>" class="d-none"></div>
    <div id="trackFileDelete" data-folder="" data-file="" class="d-none"></div>
</div>



<script src="/javascripts/jquery.min.js"></script>
<script src="/javascripts/popper.min.js"></script>
<script src="/javascripts/tether.min.js"></script>
<script src="/javascripts/bootstrap.min.js"></script>

<script>


    document.addEventListener('DOMContentLoaded',()=>{
        //Sentense case all Folder Names
        document.querySelectorAll('.direcName').forEach((name)=>{
            //update
           name.style.textTransform= 'capitalize'
        })

        let viewing_folder = document.querySelector('#currentView')
        let folderTracker = document.querySelector('#currentDir') //data-pathDir
        let folders = document.querySelectorAll('.directorymain')
        let outputTable = document.querySelector('#output-section table')
        let outputState= document.querySelector('#output-section-text')
        let fileDeleteTrack = document.querySelector('#trackFileDelete') //data-folder="" data-file=""
        let deleteFbutton = document.querySelector('#folderDeteler')

        let table_fields ='<tr>'+
            '<th>Type</th>'+
            '<th>Name</th>'+
            '<th>Size</th>'+
            '<th>Downloads</th>'+
            '<th>Share/Download</th>'+
            '<th class=" disabled">Delete</th>'+
        '</tr>'
       function outputState_show(msg,color){
           outputState.classList.remove(...outputState.classList);
           outputState.classList.add(color)
           outputState.innerHTML =msg
       }
       function outputState_hide(){
           outputState.classList.remove(...outputState.classList);
           outputState.classList.add('d-none')

       }
        outputState_show("Fetching your Documents.Please wait <i class='fa fa-spin fa-spinner'></i>",'text-info')

     function deleteFiles(){
            let fileDeleBtns = document.querySelectorAll('.deletFile')
            fileDeleBtns.forEach((btn)=>{
                btn.addEventListener('click',function (){
                   let toDeleteFile  =this.getAttribute('data-fileTarget')
                   let file  = toDeleteFile.split('-')[1]
                   let folder = toDeleteFile.split('-')[0]

                    fileDeleteTrack.setAttribute('data-folder',folder)
                    fileDeleteTrack.setAttribute('data-file',file)
                    document.querySelector('#deleteFileName').innerHTML = file
                    console.log(fileDeleteTrack)

                })
            })
     }
        //fecth home folder items and output
        folders.forEach((folder)=>{

            //check if its home

            if(folder.getAttribute('data-folderName')==='home'){

                //output home table
                deleteFbutton.style.displa = 'none'
                outputState_hide()
                //fecth table columns and ouput
                let all_files = folder.querySelectorAll('.dir-Contents div')
                let prepared_table_data =''
                all_files.forEach((file)=>{
                    folderName = folder.getAttribute('data-folderName')

                    let filename,filesize,filedownloads,filetype,filelink,filextension
                    filename = file.getAttribute('data-fileName')

                    filesize = (Number(file.getAttribute('data-fileSize'))/1024).toFixed(2) //(MB)
                    if(filesize>999){
                        filesize = (Number(file.getAttribute('data-fileSize'))/(1024*1024)).toFixed(2)
                        filesize = filesize+ ' MB'


                    }else{
                        filesize = filesize + " KB"
                    }
                    filextension= file.getAttribute('date-Filextension')
                    filedownloads=file.getAttribute('data-DownloadsCount')
                    filetype = file.getAttribute('data-fileType')
                    filelink = String(file.getAttribute('data-FilePath'))
                    let filenameonly = file.getAttribute('data-fileName')
                    filename = filename +'.'+ filextension


                    if(filetype.search(/javascript/i)>-1 || filetype.indexOf(/html/i)>-1 ){
                        //Code related
                        icon_to_show = '<i class="fas fa-code"></i>'
                    }else  if(filetype.search(/image/i)>-1 || filetype.search(/ogg/i)>-1){
                         //image
                        icon_to_show='<i class="far fa-image"></i>'
                    }else if(filetype.search(/video/i)>-1){
                        //video
                        icon_to_show='<i class="fas fa-video"></i>'
                    }else if(filetype.search(/rar/i)>-1 || filetype.search(/octet-stream/i)>-1 ){
                        //archive
                        icon_to_show='<i class="far fa-file-archive"></i>'
                    }else if(filetype.search(/pdf/i)>-1){
                        //pdf
                        icon_to_show='<i class="far fa-file-pdf"></i>'

                    }else if(filetype.search(/msword/i)>-1 || filetype.search('doc')>-1){
                      //doc
                        icon_to_show='<i class="far fa-file-word"></i>'
                    }else if(filetype.search(/vnd.openxmlformats-officedocument.wordprocessingml.document/i)>-1){
                        //doxc
                        icon_to_show='<i class="far fa-file-word"></i>'
                    }else if(filetype.search(/text/i)>-1){
                        //text
                        icon_to_show ='<i class="far fa-file-alt"></i>'

                    }else{
                         icon_to_show ='<i class="fas fa-file"></i>'
                    }

                    let actualDataSize = file.getAttribute('data-fileSize')

                    prepared_table_data = prepared_table_data +
                        '<tr>'+
                        '<td>'+icon_to_show+'</td>'+
                        '<td><a target="_blank" href="/download'+filelink+'">'+filename+'</a></td>'+
                        '<td data-actualSize="'+actualDataSize+'"">'+filesize+ '</td>'+
                        '<td>'+filedownloads+'</td>'+
                        '<td title="Share"><a target="_blank" href="/download'+filelink+'"><i class="fas fa-link"></i></a></td>'+
                        '<td style="cursor: pointer" class="deletFile" data-target="#deleteFileModal" data-toggle="modal" data-fileTarget="'+folderName+'-'+filenameonly+'"><i class="fas fa-trash text-danger"></i></td>'+
                        '</tr>'
                })

                 table_fields ='<tr>'+
                    '<th>Type</th>'+
                    '<th>Name</th>'+
                    '<th>Size</th>'+
                    '<th>Downloads</th>'+
                    '<th>Share/Download</th>'+
                    '<th class=" disabled">Delete</th>'+
                    '</tr>'
                outputTable.innerHTML = table_fields+prepared_table_data
                deleteFiles()


            }

            folder.addEventListener('click',function(){
           //show delete button for folder
                document.querySelector('#sortBySize').innerHTML ='<i class="fa fa-sort"></i> Sort by Size'
                if(folder.getAttribute('data-folderName')==='home'){
                    deleteFbutton.style.display = 'none'
                }else{
                    deleteFbutton.style.marginTop = "-25px"
                    deleteFbutton.style.width = "150px"
                    deleteFbutton.style.marginLeft="80%"
                    deleteFbutton.style.display = 'inherit'
                }

              //empty output
                folderTracker.setAttribute('data-pathDir',folder.getAttribute('data-folderName'))
                viewing_folder.innerHTML = String(folder.getAttribute('data-folderName'))
                document.querySelector('#deleteprompt').innerHTML =   document.querySelector('#currentDir').getAttribute('data-pathDir')
                viewing_folder.style.textTransform = "capitalize"
                outputTable.innerHTML=''

                document.querySelector('#createLocation').innerHTML = "You are uploading to <span style='font-weight:bold'>"+String(folder.getAttribute('data-folderName'))+"</span> Folder"

                //output home table
                outputState_hide()
                //fecth table columns and ouput
                let all_files = folder.querySelectorAll('.dir-Contents div')
                let prepared_table_data =''
                if(all_files.length===0){
                    outputState_show("<span class='p-2 text-center'>This Folder is currently Empty</span>",'text-warning')
                }else{
                    all_files.forEach((file)=>{
                        folderName = folder.getAttribute('data-folderName')

                        let filename,filesize,filedownloads,filetype,filelink,filextension
                        filename = file.getAttribute('data-fileName')

                        filesize = (Number(file.getAttribute('data-fileSize'))/1024).toFixed(2) //(MB)
                        if(filesize>999){
                            filesize = (Number(file.getAttribute('data-fileSize'))/(1024*1024)).toFixed(2)
                            filesize = filesize+ ' MB'


                        }else{
                            filesize = filesize + " KB"
                        }
                        filextension= file.getAttribute('date-Filextension')
                        filedownloads=file.getAttribute('data-DownloadsCount')
                        filetype = file.getAttribute('data-fileType')
                        let filenameOnly = file.getAttribute('data-fileName')
                        filelink = String(file.getAttribute('data-FilePath'))

                        filename = filename +'.'+ filextension


                        if(filetype.search(/javascript/i)>-1 || filetype.indexOf(/html/i)>-1 ){
                            //Code related
                            icon_to_show = '<i class="fas fa-code"></i>'
                        }else  if(filetype.search(/image/i)>-1 || filetype.search(/ogg/i)>-1){
                            //image
                            icon_to_show='<i class="far fa-image"></i>'
                        }else if(filetype.search(/video/i)>-1){
                            //video
                            icon_to_show='<i class="fas fa-video"></i>'
                        }else if(filetype.search(/rar/i)>-1 || filetype.search(/octet-stream/i)>-1 ){
                            //archive
                            icon_to_show='<i class="far fa-file-archive"></i>'
                        }else if(filetype.search(/pdf/i)>-1){
                            //pdf
                            icon_to_show='<i class="far fa-file-pdf"></i>'

                        }else if(filetype.search(/msword/i)>-1 || filetype.search('doc')>-1){
                            //doc
                            icon_to_show='<i class="far fa-file-word"></i>'
                        }else if(filetype.search(/vnd.openxmlformats-officedocument.wordprocessingml.document/i)>-1){
                            //doxc
                            icon_to_show='<i class="far fa-file-word"></i>'
                        }else if(filetype.search(/text/i)>-1){
                            //text
                            icon_to_show ='<i class="far fa-file-alt"></i>'

                        }else{
                            icon_to_show ='<i class="fas fa-file"></i>'
                        }

                        let actualDataSize = file.getAttribute('data-fileSize')
                        prepared_table_data = prepared_table_data +
                            '<tr>'+
                            '<td>'+icon_to_show+'</td>'+
                            '<td><a target="_blank" href="/download'+filelink+'">'+filename+'</a></td>'+
                            '<td data-actualSize="'+actualDataSize+'">'+filesize+ '</td>'+
                            '<td>'+filedownloads+'</td>'+
                            '<td title="Share"><a target="_blank" href="/download'+filelink+'"><i class="fas fa-link"></i></a></td>'+
                            '<td style="cursor: pointer" class="deletFile" data-target="#deleteFileModal" data-toggle="modal" data-fileTarget="'+folderName+'-'+filenameOnly+'"><i class="fas fa-trash text-danger"></i></td>'+
                            '</tr>'
                    })

                    table_fields ='<tr>'+
                        '<th>Type</th>'+
                        '<th>Name</th>'+
                        '<th>Size</th>'+
                        '<th>Downloads</th>'+
                        '<th>Share/Download</th>'+
                        '<th class=" disabled">Delete</th>'+
                        '</tr>'
                    outputTable.innerHTML = table_fields+prepared_table_data
                    deleteFiles()
                }


            })



        })






        let userFileName = document.querySelector("#fileTitle")


        //Filter TItle INput
        userFileName.addEventListener("input",function(){
            let invalid_characters = ["-","/","*","#","$","!","@","$","%","(" ,")",".",",","'",'"']
            let latsInsertedChar = this.value[(this.value).length -1 ]

            if (invalid_characters.indexOf(latsInsertedChar)>-1){
                $("#FieldTitleLabel").addClass("text-danger").html("<small>Invalid character ("+latsInsertedChar+") usage in file title !</small>")
                this.value =this.value.slice(this.value,(this.value).length -1)
                fileState.removeClass("d-none").html("Enter a valid File Name ")
                $("#uploadForm button").attr("data-formState","bad")
            }else{
                $("#FieldTitleLabel").removeClass("text-danger").html('File Title <span class="text-danger"><sup>*</sup></span>')
            }
        })

        // Add the following code if you want the name of the file appear on select
        let fileState = $('#fileState')

        $(".custom-file-input").on("change", function() {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
        //Upload form submission
        $("#uploadForm").on("submit",function(e){
            e.preventDefault()
            $("#uploadForm button").attr("data-formState","okay")
            let formState = $("#uploadForm button").attr("data-formState")
            if (formState === "bad" || formState === undefined || formState.length<2){
                //Invalid Form

                fileState.removeClass("d-none").html("The form contains errors , check your inputs and try submitting again. ")
                $("#uploadForm button").attr("data-formState","bad")
            }else{
                //Process the Form

                let FileSize = document.querySelector('#customFile').files[0].size


                if (!isNaN(FileSize)){
                    //a valid Number
                   let mbSize  = FileSize/ (1024 * 1024 )

                    if(mbSize>500){
                        fileState.addClass("alert alert-danger").removeClass(" alert-info d-none alert-success alert-warning").html("File is greater than 500MB.Cannot Upload")
                    }else{
                        //Proceed to Uploading
                        $('#toFolder').attr('value',$('#currentDir').attr('data-pathDir'))
                        fileState.removeClass("d-none text-danger text-success alert-danger alert-warning").addClass("alert-info").html("Submitting .Please wait <span data-pcnt='0' id='percentageProgress'>0</span> ")
                        let dataPercentage = $("#percentageProgress")

                        let formdata = new FormData( document.querySelector("#uploadForm"));

                       let xhr = new XMLHttpRequest();


                        xhr.open("post", "/users/new/file");
                       // xhr.setRequestHeader("Content-type", "multipart/form-data;boundary=----WebKitFormBoundaryyrV7KO0BoCBuDbTL");

                        xhr.upload.onprogress= function (e){
                           $("#percentageProgress").attr("data-pcnt",xhr.responseText)
                               let calculateProgress =Math.round((Number(e.loaded)/Number(e.total))*100)
                            let progR ='  <div style="height:30px;  class="progress"> <div class="progress-bar active bg-success" role="progressbar" aria-valuenow="'+calculateProgress+'" aria-valuemin="0" aria-valuemax="100" style="height:30px;width:'+calculateProgress+'%">'+calculateProgress+'% Complete </div></div>'
                            fileState.removeClass("d-none alert-info text-danger  alert-danger ").addClass('alert alert-warning').html('Upload in progress.This page will relode once the upload is complete. Please Do not close this popup or reload the page. ')
                            $('#trackProgress').html(progR)
                       }
                         xhr.addEventListener('loadstart',()=>{
                        //     console.log(xhr.responseText)
                             $("#uploadForm button").addClass('d-none')
                            fileState.removeClass("d-none alert-warning alert-danger alert-success").addClass("alert alert-info").html("Initializing  Upload.<i class='fa fa-spin fa-spinner'></i>")
                         })
                         xhr.addEventListener('load',()=>{
                             if(xhr.status===200){
                                 fileState.removeClass("d-none alert-info alert-warning alert-danger").addClass("alert alert-success").html("Your File has been Uploaded Successfully.You will be redirected shortly")
                                 $('#trackProgress').html('')
                                 $("#uploadForm").each(function(){
                                 this.reset();
                             });
                                 $(".custom-file-input").val('')

                             setTimeout(()=>{
                                     window.location.href =''
                                 },1500)
                             }else{
                                 fileState.removeClass("d-none alert-info alert-warning alert-success").addClass("alert alert-danger").html("Failed to Upload ! "+ xhr.responseText)
                                 $('#trackProgress').html('')
                                 $("#uploadForm button").removeClass('d-none')
                             }

                         })
                        xhr.addEventListener('error',()=>{
                            $("#uploadForm button").removeClass('d-none')
                            fileState.addClass("alert alert-danger ").removeClass("d-none alert-warning alert-success alert-info ").html("Failed to upload ! "+xhr.responseText )
                            $('#trackProgress').html('')

                        })

                        xhr.send(formdata);


                    }


                }else{
                    //It sis not a number
                    fileState.addClass(" alert alert-danger").removeClass(" d-none alert-info alert-warning alert-success").html("Cannot determine the File Size.")
                }

                // setInterval(()=>{
                //     if (Number($("#percentageProgress").attr("data-pcnt"))<100){
                //         //update
                //         dataPercentage.html((Number($("#percentageProgress").attr("data-pcnt")))+5+" % done")
                //         $("#percentageProgress").attr("data-pcnt",Number($("#percentageProgress").attr("data-pcnt"))+5)
                //         console.log(Number($("#percentageProgress").attr("data-pcnt")))
                //
                //     }
                // },1500)

            }
        })


        //folderCreation
        let currentDir = $('#currentDir').attr('data-pathDir')
        let folderFormState = $('#folderFormState')
        let folderLocation = $('#folderLocation')
        $('#folderCreate input').on('input',function(){
            if ( /[0-9]/.test(this.value)==false && /['@,!,#,$,%,^,&,*,(,),+,=,~,`,|,\,?,",\',{,}']/.test(this.value)===false){
                folderLocation.html(currentDir+'/'+this.value +'<span style="color:grey"><small> ( Directory path ) </small><span>')
                folderFormState.removeClass('alert-danger').addClass('d-none').html('')
                document.querySelector('#folderCreate').querySelectorAll('button')[0].disabled= false
            }else{
                folderFormState.addClass('alert-danger p-0').removeClass('alert-success d-none').html('Enter a valid Folder Name')
                document.querySelector('#folderCreate').querySelectorAll('button')[0].disabled= true
            }

        })
        $('#folderCreate').submit((e)=>{
            e.preventDefault()

            //verify the name doensnt have unwanted Characters
            let FormData =  $('#folderCreate').serialize()  + '&csrf='+ $('#csrfToken').attr('data-csrf')

            folderFormState.removeClass('alert-danger d-none').addClass('alert-success').html("Creating Folder.Please wait! <i class='fa fa-spin fa-spinner'></i>")
            $.post('/users/new/folder',FormData,()=>{
                folderFormState.removeClass('alert-danger d-none').addClass('alert-success').html('Success! Folder has been created')
                setTimeout(()=>{
                    window.location.reload()
                },1500)
            }).fail((xhr)=>{
                folderFormState.removeClass('alert-success d-none').addClass('alert-danger').html('Failed to Create Folder! '+ xhr.responseText)
            })

        })


        //delete folder
        let deletefolderButton = document.querySelector('#deleteFolder')
        let deletefolderInput = document.querySelector('#verifyDeleteFolder')
        deletefolderInput.addEventListener('input',function (){

            let todelet = document.querySelector('#currentDir').getAttribute('data-pathDir')
            if(todelet!=='home' && this.value===todelet){
                //show delete Button
                deletefolderButton.classList.remove('d-none')
            }else{
                deletefolderButton.classList.add('d-none')
            }

        })
        const deleteFolderDisclaimer = deletefolderButton.innerHTML
        deletefolderButton.addEventListener('click',function (){
            let csrf =document.querySelector("#csrfToken").getAttribute('data-csrf')
            let todelet = document.querySelector('#currentDir').getAttribute('data-pathDir')
            deletefolderButton.innerHTML ="Deleting! Please wait <i class='fa fa-spin fa-spinner'></i>"
            $.post('/users/delete/folder',"folderName="+todelet+'&csrf='+csrf,(data)=>{
                   deletefolderButton.innerHTML="Success ! Folder has been deleted Successfully."
                setTimeout(()=>{
                    window.location.reload()
                },1500)
            }).fail((xhr)=>{
                  deletefolderButton.innerHTML ="Failed to Delete Folder ! "+ xhr.responseText
                setTimeout(()=>{
                    deletefolderButton.innerHTML = deleteFolderDisclaimer
                },5000)
            })
        })


        //deletFile
        //        fileDeleteTrack.setAttribute('data-folder',folder)
        //fileDeleteTrack.setAttribute('data-file',name)

        //delete e,porarily
        const deleteTempFileHTML =  document.querySelector('#deleteFile').innerHTML
        document.querySelector('#deleteFile').addEventListener('click',function(){

            this.innerHTML = "Deleting File. Please wait <i class='fa fa-spin fa-spinner'></i>"
            let csrf =document.querySelector("#csrfToken").getAttribute('data-csrf')
            let file = fileDeleteTrack.getAttribute('data-file')
            let folder = fileDeleteTrack.getAttribute('data-folder')
            document.querySelector('#deleteFileP').classList.add('d-none')
            $.post('/users/delete/file/temp','csrf='+csrf+'&file='+file+'&folder='+folder,(data)=>{
                this.innerHTML ="Success ! File has been deleted."
                setTimeout(()=>{
                    window.location.reload()
                },1500)
            }).fail((xhr)=>{
                this.innerHTML ="Failed to Delete ! "+ xhr.responseText
                document.querySelector('#deleteFileP').classList.remove('d-none')
                setTimeout(()=>{
                    this.innerHTML = deleteTempFileHTML

                },5000)
            })

        })
        const deletePermFileHTML =  document.querySelector('#deleteFileP').innerHTML
        document.querySelector('#deleteFileP').addEventListener('click',function(){

            this.innerHTML = "Deleting File. Please wait <i class='fa fa-spin fa-spinner'></i>"
            let csrf =document.querySelector("#csrfToken").getAttribute('data-csrf')
            let file = fileDeleteTrack.getAttribute('data-file')
            let folder = fileDeleteTrack.getAttribute('data-folder')
            document.querySelector('#deleteFile').classList.add('d-none')
            $.post('/users/delete/file/perm','csrf='+csrf+'&file='+file+'&folder='+folder,(data)=>{
                this.innerHTML ="Success ! File has been deleted."
                setTimeout(()=>{
                    window.location.reload()
                },1500)
            }).fail((xhr)=>{
                document.querySelector('#deleteFile').classList.remove('d-none')
                this.innerHTML ="Failed to Delete ! "+ xhr.responseText
                setTimeout(()=>{
                    this.innerHTML = deletePermFileHTML
                },5000)
            })

        })


        //sort Functionality
        let sortBTN = document.querySelector('#sortBySize')
        sortBTN.addEventListener('click',function (){

           let sortType = this.getAttribute('data-sorttype')
            if(sortType.search(/Asc/i)>-1){
                //sort assenging
                sortBTN.innerHTML = ' <i class="fa fa-sort-up text-warning"></i> Sort by Size'
                let allTableData =outputTable.querySelectorAll('tr')
                let allSizes  = []
                let sortedHTML = []
                allTableData.forEach((data)=>{

                    let size  = data.querySelectorAll('td')[2]
                    if(size!==undefined){
                        let sizeValue = size.getAttribute('data-actualSize')
                        allSizes.push(sizeValue)
                    }
                })

                //actal assending sort
                allSizes.sort((a,b)=>{
                    return a-b
                })

                //map the values
                allSizes.forEach((size)=>{
                    allTableData.forEach((tr)=>{
                        let td = tr.querySelectorAll('td')[2]
                        if(td!==undefined){
                            let sze = td.getAttribute('data-actualSize')
                            if(sze===size){


                                sortedHTML.push('<tr>'+tr.innerHTML+'</tr>')
                            }
                        }
                    })
                })

                sortedHTML = sortedHTML.join(' ')

                outputTable.innerHTML = table_fields+sortedHTML
                sortBTN.setAttribute('data-sorttype','Desc')
            }else{
                //sort descending
                sortBTN.innerHTML = ' <i class="fa fa-sort-down text-warning"></i> Sort by Size'

                let allTableData =outputTable.querySelectorAll('tr')
                let allSizes  = []
                let sortedHTML = []
                allTableData.forEach((data)=>{

                    let size  = data.querySelectorAll('td')[2]
                    if(size!==undefined){
                        let sizeValue = size.getAttribute('data-actualSize')
                        allSizes.push(sizeValue)
                    }
                })

                //actal assending sort
                allSizes.sort((a,b)=>{
                    return b-a
                })

                //map the values
                allSizes.forEach((size)=>{
                    allTableData.forEach((tr)=>{
                        let td = tr.querySelectorAll('td')[2]
                        if(td!==undefined){
                            let sze = td.getAttribute('data-actualSize')
                            if(sze===size){
                                sortedHTML.push('<tr>'+tr.innerHTML+'</tr>')
                            }
                        }
                    })
                })
                sortedHTML =sortedHTML.join(' ')
                outputTable.innerHTML = table_fields+sortedHTML
                sortBTN.setAttribute('data-sorttype','Asc')
            }
        })

        //search Functionality
        let defaultTable = outputTable.innerHTML
       document.querySelector('#FilesSearch').addEventListener('input',function(){

           let q =this.value

           if(q.length>0){
               let allTableData =outputTable.querySelectorAll('tr')
               let matchingHTML = []

                   allTableData.forEach((tr)=>{
                       let td = tr.querySelectorAll('td')[1]

                       if(td!==undefined){
                        let rowValue = td.querySelectorAll('a')[0].innerHTML
                           let to_add = '<tr>'+tr.innerHTML+'</tr>'

                           var regex = new RegExp( q, "i");

                        if(rowValue.search(regex)>-1){
                            //we found a matching value

                            if(matchingHTML.includes(to_add)===false){
                                matchingHTML.push(to_add)
                            }
                        }
                       }
                   })

                if(matchingHTML.length>0){


                    matchingHTML = matchingHTML.join(' ')
                    console.log(matchingHTML)
                    outputTable.innerHTML = table_fields+matchingHTML
                }

           }else{
               outputTable.innerHTML = defaultTable
           }



       })

    })

</script>


</body>
</html>